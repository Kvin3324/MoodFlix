{"version":3,"sources":["components/Header/TitleStyled.style.js","components/Header/Title.js","components/Slider/Slider.js","components/Feed/MoviesHome/MoviesStyled.style.js","components/Movie/Movie.js","components/Loader/LoaderStyle.style.js","components/Loader/Loader.js","components/Feed/MoviesHome/MoviesRecommendations.js","components/Feed/MoviesHome/MoviesTopRated.js","container/Feed.js","components/Movie/AboutMovieStyled.style.js","components/Movie/AboutMovie.js","components/Tv/AboutTvStyled.style.js","components/Tv/Season&EpStyled.style.js","components/Tv/SeasonsEp/Seasons/SeasonsStyled.style.js","components/Tv/SeasonsEp/Seasons/Seasons.js","components/Tv/AboutTv.js","components/Tv/Tv.js","components/LeftSection/Filters/Trending/TrendingMovies.js","components/LeftSection/Filters/TvMovies/Tv/TvTopRated.js","components/LeftSection/Filters/TvMovies/Movie/PopularMovie.js","components/LeftSection/Filters/TvMovies/FeedTvMovies.js","components/LeftSection/Filters/Tv/TvList.js","components/LeftSection/Filters/FiltersStyle/FiltersStyled.style.js","components/LeftSection/Filters/Trending/Trending.js","components/LeftSection/Filters/TvMovies/TvMovies.js","components/LeftSection/Filters/Categories/CategoriesStyled.style.js","components/LeftSection/Filters/Categories/Categories.js","components/LeftSection/Filters/Tv/Tv.js","components/Filters/Filters.js","container/Results.js","container/SearchBar/SearchBarStyled.style.js","container/SearchBar/SearchBar.js","components/SearchResults/SearchResults.js","components/Tv/SeasonsEp/Seasons/AboutSeason/AboutSeasonStyled.style.js","components/Tv/SeasonsEp/Seasons/AboutSeason/AboutSeason.js","App/App.js","serviceWorker.js","index.js"],"names":["TitleStyled","styled","h1","Title","to","Slider","props","arrows","className","containerClass","dotListClass","focusOnSelect","infinite","itemClass","keyBoardControl","minimumTouchDrag","renderButtonGroupOutside","renderDotsOutside","responsive","desktop","breakpoint","max","min","items","slidesToSlide","partialVisibilityGutter","tablet","mobile","showDots","sliderClass","swipeable","partialVisible","children","MoviesStyled","div","Movie","Fragment","movie","id","poster_path","src","alt","title","length","substr","LoaderStyled","Loader","blue","useRef","red","yellow","green","useEffect","TweenMax","fromTo","current","y","yoyo","repeat","viewBox","width","height","ref","cx","cy","r","fill","Movies","useState","data","setData","fetch","process","then","response","json","dataParsed","results","map","index","key","MoviesTopRated","Feed","MoviesRecommendations","AboutMovieStyled","AboutMovie","goBack","history","match","params","console","log","videos","onClick","backdrop_path","vote_average","Array","e","i","genres","genre","name","runtime","Date","release_date","getFullYear","overview","url","controls","SeasonEpStyled","SeasonsStyled","Seasons","tv","seasons","season_number","episode_count","date","air_date","day","getDay","month","getMonth","year","convertDate","AboutTv","showSeasons","tvSeasons","newState","season","original_name","episode_run_time","first_air_date","href","rel","target","number_of_seasons","number_of_episodes","last_episode_to_air","still_path","episode_number","next_episode_to_air","nextEp","Tv","media_type","TrendingMovies","TvTopRated","PopularMovie","TvList","TvResults","currentPage","totalResults","totalPages","getTvResults","page","total_results","total_pages","onChange","total","pageSize","FiltersStyled","Trending","TvMovies","CategoriesStyled","Categories","Filters","Results","getResults","sort","a","b","original_title","result","SearchBarStyled","SearchBar","searchInput","searchResults","el","value","type","placeholder","SearchResults","getSearchResults","location","search","resultMovie","AboutSeasonStyled","AboutSeason","episodes","credits","cast","people","profile_path","character","video","episode","sn","epn","App","exact","path","component","Boolean","window","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9ff59c19.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nconst TitleStyled = styled.h1`\n  margin-bottom: 2%;\n  a, a:hover {\n    color: white;\n    text-decoration: none;\n  }\n  font-size: 3em;\n  font-family: Lobster;\n`\n\nexport default TitleStyled","import React from \"react\";\nimport TitleStyled from \"./TitleStyled.style\";\nimport { NavLink } from \"react-router-dom\";\n\nfunction Title() {\n  return(\n    <TitleStyled>\n      <NavLink to=\"/\">\n        MoodFlix\n      </NavLink>\n    </TitleStyled>\n  )\n}\n\nexport default Title","import React from \"react\";\nimport Carousel from \"react-multi-carousel\";\nimport \"react-multi-carousel/lib/styles.css\";\n\nfunction Slider(props) {\n  const responsive = {\n    desktop: {\n      breakpoint: { max: 3000, min: 1024 },\n      items: 5,\n      slidesToSlide: 2,\n      partialVisibilityGutter: 10\n    },\n    tablet: {\n      breakpoint: { max: 1024, min: 464 },\n      items: 2,\n      slidesToSlide: 2,\n      partialVisibilityGutter: 10\n    },\n    mobile: {\n      breakpoint: { max: 464, min: 0 },\n      items: 1,\n      slidesToSlide: 1,\n      partialVisibilityGutter: 10\n    },\n  };\n\n  return (\n    <Carousel\n      arrows\n      className=\"\"\n      containerClass=\"container\"\n      dotListClass=\"\"\n      focusOnSelect={false}\n      infinite={true}\n      itemClass=\"\"\n      keyBoardControl\n      minimumTouchDrag={80}\n      renderButtonGroupOutside={false}\n      renderDotsOutside={false}\n      responsive={responsive}\n      showDots={false}\n      sliderClass=\"\"\n      slidesToSlide={3}\n      swipeable\n      partialVisible = \"right\"\n    >\n      {props.children}\n    </Carousel>\n  )\n}\n\nexport default Slider\n\n","import styled from \"styled-components\";\n\nconst MoviesStyled = styled.div`\n  {\n    display: inline-flex;\n    margin-bottom: 10%;\n      img {\n        height: 100%;\n        width: 10vw;\n        object-fit: cover;\n      }\n      a {\n        text-decoration: none;\n      }\n      h2 {\n        text-align: center;\n        font-size: 16px;\n        font-weight: bold;\n        margin: 0;\n        color: white;\n        margin-top: 10px;\n      }\n      :hover {\n        cursor: pointer;\n      }\n  }\n`\n\nexport default MoviesStyled","import React from \"react\";\nimport MoviesStyled from \"../Feed/MoviesHome/MoviesStyled.style\";\nimport { Link } from \"react-router-dom\";\n\n\nfunction Movie(props) {\n  return (\n    <React.Fragment>\n      <MoviesStyled className=\"movie\">\n        <Link to={`/aboutMovie/${props.movie.id}`}>\n          <div className=\"movie--body mr-5\">\n            <div className=\"movie--img\">\n              {\n                function () {\n                  if (props.movie.poster_path === null) {\n                    return <img src=\"https://citainsp.org/wp-content/uploads/2016/01/default.jpg\" alt=\"no__poster\"></img>\n                  } else {\n                    return <img src={`https://image.tmdb.org/t/p/w500/${props.movie.poster_path}`} alt=\"poster\" />\n                  }\n                }()\n              }\n            </div>\n            <div className=\"movie--title\">\n              {\n                function () {\n                  if (props.movie.title.length > 20) {\n                    return <h2>{props.movie.title.substr(0, 10)}(...)</h2>\n                  } else {\n                    return <h2>{props.movie.title}</h2>\n                  }\n                }()\n              }\n            </div>\n          </div>\n        </Link>\n      </MoviesStyled>\n    </React.Fragment>\n  )\n}\n\nexport default Movie","import styled from \"styled-components\";\n\nconst LoaderStyled = styled.div`\n  text-align: center\n`\n\nexport default LoaderStyled","import React, {useEffect, useRef} from \"react\";\nimport {TweenMax} from \"gsap\";\nimport LoaderStyle from \"./LoaderStyle.style\";\n\nconst Loader = () => {\n  const blue = useRef(null);\n  const red = useRef(null);\n  const yellow = useRef(null);\n  const green = useRef(null);\n\n  useEffect(() => {\n    TweenMax.fromTo([blue.current, yellow.current],\n      0,5,\n      { y: 18 },\n      { y: 18, yoyo: true, repeat: -1 }\n    );\n\n    TweenMax.fromTo([red.current, green.current],\n      0,5,\n      { y: -18 },\n      { y: 18, repeat: -1, yoyo: true }\n    );\n  })\n\n  return (\n    <LoaderStyle className=\"loader\">\n       <svg viewBox=\"0 0 150 33.2\" width=\"80\" height=\"80\">\n        <circle ref={blue} cx=\"16.1\" cy=\"16.6\" r=\"16.1\" fill=\"#B0E7FF\" />\n        <circle ref={red} cx=\"55.2\" cy=\"16.6\" r=\"16.1\" fill=\"#C9EFFF\" />\n        <circle ref={yellow} cx=\"94.3\" cy=\"16.6\" r=\"16.1\" fill=\"#B0E7FF\" />\n        <circle ref={green} cx=\"133.4\" cy=\"16.6\" r=\"16.1\" fill=\"#C9EFFF\" />\n      </svg>\n    </LoaderStyle>\n  );\n}\nexport default Loader;","import React, { useState, useEffect } from \"react\";\nimport Slider from \"../../Slider/Slider\";\nimport Movie from \"../../Movie/Movie\";\nimport Loader from \"../../Loader/Loader\";\n\nfunction Movies() {\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    fetch(`https://api.themoviedb.org/3/movie/12/recommendations?api_key=${process.env.REACT_APP_API_KEY_MOVIES}&language=en-US&page=1`)\n      .then(response => response.json())\n      .then(dataParsed => setData([...dataParsed.results]))\n  }, []);\n\n  return (\n    <React.Fragment>\n      <div className=\"movies--feed mt-5 col-lg-12\">\n        <h1>Recommended for you</h1>\n        <div className=\"movies--feed--recommendations\">\n        <Slider>\n          {\n            function () {\n              if (data.length === 0) return <Loader/>;\n\n              if (data.length !== 0) {\n                return data.map((movie, index) => {\n                  return(\n                    <Movie movie={movie} key={index} />\n                  )\n                })\n              }\n            }()\n          }\n        </Slider>\n        </div>\n      </div>\n    </React.Fragment>\n  )\n}\n\nexport default Movies","import React, { useState, useEffect } from \"react\";\nimport Slider from \"../../Slider/Slider\";\nimport Movie from \"../../Movie/Movie\";\nimport Loader from \"../../Loader/Loader\";\n\nfunction MoviesTopRated() {\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    fetch(`https://api.themoviedb.org/3/movie/top_rated?api_key=${process.env.REACT_APP_API_KEY_MOVIES}&language=en-US&page=1`)\n      .then(response => response.json())\n      .then(dataParsed => setData([...dataParsed.results]))\n  }, []);\n\n  return(\n      <React.Fragment>\n        <div className=\"movies--feed col-lg-12\">\n          <h1>Top Rated</h1>\n          <div className=\"movies--feed--top--rated\">\n          <Slider>\n            {\n              function () {\n                if (data.length === 0) return <Loader/>;\n\n                if (data.length !== 0) {\n                  return data.map((movie, index) => {\n                    return(\n                      <Movie movie={movie} key={index} />\n                    )\n                  })\n                }\n              }()\n            }\n          </Slider>\n          </div>\n        </div>\n      </React.Fragment>\n  )\n}\n\nexport default MoviesTopRated","import React from \"react\";\nimport MoviesRecommendations from \"../components/Feed/MoviesHome/MoviesRecommendations\";\nimport MoviesTopRated from \"../components/Feed/MoviesHome/MoviesTopRated\";\n\nfunction Feed() {\n  return(\n    <React.Fragment>\n      <MoviesRecommendations />\n      <MoviesTopRated />\n    </React.Fragment>\n  )\n}\n\nexport default Feed","import styled from \"styled-components\";\n\nconst AboutMovieStyled = styled.div`\n  .go--to--home {\n    position: absolute;\n    top: 3%;\n   i {\n     font-size: 1.5em;\n     cursor: pointer;\n   }\n  }\n  color: white;\n  margin-top: 14%;\n  margin-left: 4%;\n  .movie--about--header {\n    margin-bottom: 2%;\n    img {\n      float: left;\n    }\n  }\n  .movie--about--meta {\n    margin-left: 50%;\n    h1 {\n      font-size: 3em;\n    }\n    p {\n      display: inline-flex;\n      padding: 0 5px;\n    }\n  }\n  .movie--about--description {\n    margin: 5% 0;\n    font-size: 1.4em;\n  }\n  button, button:hover {\n    background-color: #21232A;\n    border: none;\n      a {\n        text-decoration: none;\n        color: white;\n      }\n  }\n`\n\nexport default AboutMovieStyled","import React, { useState, useEffect } from \"react\";\nimport AboutMovieStyled from \"./AboutMovieStyled.style\";\nimport Loader from \"../Loader/Loader\";\nimport ReactPlayer from \"react-player\";\n\nfunction AboutMovie(props) {\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    fetch(`https://api.themoviedb.org/3/movie/${props.match.params.id}?api_key=${process.env.REACT_APP_API_KEY_MOVIES}&language=en-US&append_to_response=videos`)\n      .then(response => response.json())\n      .then(dataParsed => setData({ ...dataParsed }))\n  }, []);\n\n  console.log(data.videos);\n\n\n  function goBack() {\n    props.history.goBack(-1);\n  }\n\n  function voteAverage() {\n    if (data.vote_average > 8) {\n      return (\n        <>\n          <p>rating:</p>\n          <p>\n            {[...Array(4)].map((e, i) => <i className=\"fas fa-star\" key={i}></i>)}\n            <i className=\"fas fa-star-half\"></i>\n          </p>\n          <p>{data.vote_average} </p>\n        </>\n      )\n    }\n    if (data.vote_average > 5 && data.vote_average < 8) {\n      return (\n        <>\n          <p>rating:</p>\n          <p>\n            {[...Array(3)].map((e, i) => <i className=\"fas fa-star\" key={i}></i>)}\n            {[...Array(2)].map((e, i) => <i className=\"far fa-star\" key={i}></i>)}\n          </p>\n          <p>{data.vote_average} </p>\n        </>\n      )\n    }\n    if (data.vote_average < 5) {\n      return (\n        <>\n          <p>rating:</p>\n          <p>\n            {[...Array(2)].map((e, i) => <i className=\"fas fa-star\" key={i}></i>)}\n            {[...Array(3)].map((e, i) => <i className=\"far fa-star\" key={i}></i>)}\n          </p>\n          <p>{data.vote_average} </p>\n        </>\n      )\n    }\n  }\n\n  function releaseYear() {\n    return <p>release date: {new Date(data.release_date).getFullYear()} </p>\n  }\n\n  function movieGenres() {\n    return data.genres.map((genre, index) => {\n      return (\n        <p key={index}>{genre.name}</p>\n      )\n    })\n  }\n\n  return (\n    <React.Fragment>\n      {\n        function () {\n          if (data.length === 0) return <Loader />;\n\n          if (data.length !== 0) {\n            return (\n              <React.Fragment>\n                <AboutMovieStyled className=\"movie--about\">\n                  <div className=\"go--to--home\">\n                    <i className=\"fas fa-home\" onClick={goBack} ></i>\n                  </div>\n                  <div className=\"movie--about--header\">\n                    <div className=\"movie--about--backdrop\">\n                      <img src={`https://image.tmdb.org/t/p/w500/${data.backdrop_path}`} alt=\"backdrop\"></img>\n                    </div>\n                    <div className=\"movie--about--meta\">\n                      <div className=\"movie--about--title\">\n                        <h1>{data.title}</h1>\n                      </div>\n                      <div className=\"movie--about--infos\">\n                        <div className=\"movie--about--infos--vote\">\n                          {voteAverage()}\n                        </div>\n\n                        <div className=\"movie--about--infos--genres\">\n                          <p>genres:</p>\n                          {movieGenres()}\n                        </div>\n                        <div className=\"movie--about--infos--runtime\">\n                          <p>runtime: {data.runtime}min</p>\n                        </div>\n                        <div className=\"movie--about--infos--date\">\n                          {releaseYear()}\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"movie--about--description\">\n                    <h2>SYNOPSIS</h2>\n                    <p>{data.overview}</p>\n                  </div>\n                  {\n                    function () {\n                      if (data.videos.results[0]) {\n                        return (\n                          <ReactPlayer\n                            url={`https://www.youtube.com/watch?v=${data.videos.results[0].key}`}\n                            width={\"60%\"}\n                            controls\n                          />\n                        )\n                      }\n                    }()\n                  }\n                </AboutMovieStyled>\n              </React.Fragment>\n            )\n          }\n        }()\n      }\n    </React.Fragment>\n  )\n}\n\nexport default AboutMovie","import styled from \"styled-components\";\n\nconst AboutMovieStyled = styled.div`\n  .go--back {\n    position: absolute;\n    top: 3%;\n   i {\n     font-size: 1.5em;\n     cursor: pointer;\n   }\n  }\n  color: white;\n  margin-top: 14%;\n  margin-left: 4%;\n  .tv--about--header {\n    margin-bottom: 4%;\n    img {\n      float: left;\n    }\n  }\n  .tv--about--meta {\n    margin-left: 50%;\n    h1 {\n      font-size: 3em;\n    }\n    p {\n      display: inline-flex;\n      padding: 0 5px;\n    }\n  }\n  .tv--about--description {\n    margin: 5% 0;\n    font-size: 1.4em;\n  }\n  .tv--season {\n    display: flex;\n    justify-content: center;\n    font-size: 2em;\n    border-top: 1px solid white;\n    border-bottom: 1px solid white;\n    span {\n      border-left: 1px solid white;\n      height: 127px;\n    }\n    div {\n      margin: 0 10%;\n      p {\n        text-align: center;\n      }\n    }\n  }\n  button, button:hover {\n    background-color: #21232A;\n    border: none;\n      a {\n        text-decoration: none;\n        color: white;\n      }\n  }\n\n  .about--episodes--next--img, .about--episodes--last--img {\n    img {\n      height: 167px;\n      object-fit: contain;\n    }\n  }\n`\n\nexport default AboutMovieStyled","import styled from \"styled-components\";\n\nconst SeasonEpStyled = styled.div`\n  padding-left: 10%;\n  padding-top: 40px;\n  span {\n    padding: 2%;\n    background-color: #21232A;\n    text-decoration: none;\n    color: white;\n\n    :hover {\n      border-top: 1px solid #0CD0FC;\n      color: #0CD0FC;\n      background-color: none;\n    }\n  }\n`\n\nexport default SeasonEpStyled","import styled from \"styled-components\";\n\nconst SeasonsStyled = styled.div`\n  color: white;\n  border-top: #21232A solid 2px;\n  margin-top: 5%;\n    .season {\n      display: inline-flex;\n          img {\n            width: 15vw;\n          }\n          a {\n            color: white;\n            text-decoration: none;\n          }\n      }\n`\n\nexport default SeasonsStyled","import React from \"react\";\nimport SeasonsStyled from \"./SeasonsStyled.style\";\nimport {Link} from \"react-router-dom\";\n\nfunction Seasons(props) {\n\n  function convertDate() {\n    const date = new Date(props.data.air_date);\n    const day = date.getDay();\n    const month = date.getMonth() + 1;\n    const year = date.getFullYear();\n\n    return `${day}/${month}/${year}`;\n  }\n\n  return (\n    <React.Fragment>\n      <SeasonsStyled>\n        <div className=\"season mt-3 mb-3\">\n          <div className=\"season--poster\">\n            <img src={`https://image.tmdb.org/t/p/w500/${props.data.poster_path}`} alt=\"poster\"></img>\n          </div>\n          <div className=\" ml-3\">\n            <div className=\"season--title\">\n              <Link to={`/aboutSeason/${props.tv.id}/season/${props.seasons.season_number}`}>\n                <h2>{props.data.name}</h2>\n              </Link>\n            </div>\n            <div className=\"season--about\">\n              <p>{props.data.episode_count} episodes have started the <strong>{convertDate()}</strong></p>\n            </div>\n            <div className=\"season--overview\">\n              <p>{props.data.overview}</p>\n            </div>\n          </div>\n        </div>\n      </SeasonsStyled>\n    </React.Fragment>\n  )\n}\n\nexport default Seasons","import React, { useState, useEffect } from \"react\";\nimport AboutTvStyled from \"./AboutTvStyled.style\";\nimport Loader from \"../Loader/Loader\";\nimport SeasonEpStyled from \"./Season&EpStyled.style\";\nimport Seasons from \"./SeasonsEp/Seasons/Seasons\";\n\nfunction AboutTv(props) {\n  const [data, setData] = useState({\n    data: [],\n    showSeasons: false,\n    seasons: []\n  });\n\n  useEffect(() => {\n    fetch(`https://api.themoviedb.org/3/tv/${props.match.params.id}?api_key=${process.env.REACT_APP_API_KEY_MOVIES}&language=en-US`)\n      .then(response => response.json())\n      .then(dataParsed => setData({\n        data: dataParsed,\n        showSeasons: false,\n        seasons: dataParsed.seasons\n       })\n      )\n  }, []);\n\n  function goBack() {\n    props.history.goBack(-1);\n  }\n\n  function voteAverage() {\n    if (data.data.vote_average > 8) {\n      return (\n        <>\n          <p>Rating:</p>\n          <p>\n            {[...Array(4)].map((e, i) => <i className=\"fas fa-star\" key={i}></i>)}\n            <i className=\"fas fa-star-half\"></i>\n          </p>\n          <p>{data.data.vote_average} </p>\n        </>\n      )\n    }\n    if (data.data.vote_average > 5 && data.data.vote_average < 8) {\n      return (\n        <>\n          <p>Rating:</p>\n          <p>\n            {[...Array(3)].map((e, i) => <i className=\"fas fa-star\" key={i}></i>)}\n            {[...Array(2)].map((e, i) => <i className=\"far fa-star\" key={i}></i>)}\n          </p>\n          <p>{data.data.vote_average} </p>\n        </>\n      )\n    }\n    if (data.data.vote_average < 5) {\n      return (\n        <>\n          <p>Rating:</p>\n          <p>\n            {[...Array(2)].map((e, i) => <i className=\"fas fa-star\" key={i}></i>)}\n            {[...Array(3)].map((e, i) => <i className=\"far fa-star\" key={i}></i>)}\n          </p>\n          <p>{data.data.vote_average} </p>\n        </>\n      )\n    }\n  }\n\n  function tvGenres() {\n    return data.data.genres.map((genre, index) => {\n      return (\n        <p key={index}>{genre.name}</p>\n      )\n    })\n  }\n\n  function releaseYear() {\n    return <p>Release date: {new Date(data.data.first_air_date).getFullYear()} </p>\n  }\n\n  function lastEpImg() {\n    if (data.data.last_episode_to_air.still_path === null) {\n      return <img src=\"https://citainsp.org/wp-content/uploads/2016/01/default.jpg\" alt=\"no__poster\"></img>\n    } else {\n      return <img src={`https://image.tmdb.org/t/p/w300/${data.data.last_episode_to_air.still_path}`} alt=\"last__eps__poster\"></img>\n    }\n  }\n\n  function nextEp() {\n    if (data.data.next_episode_to_air) {\n      return(\n        <div className=\"about--episodes--next\">\n          <h3>Next episode:</h3>\n          <div className=\"about--episodes--next--img mb-4\">\n            {\n              function () {\n                  if (data.data.next_episode_to_air.still_path === null) {\n                    return <img src=\"https://citainsp.org/wp-content/uploads/2016/01/default.jpg\" alt=\"no__poster\"></img>\n                  } else {\n                    return <img src={`https://image.tmdb.org/t/p/w300/${data.data.next_episode_to_air.still_path}`} alt=\"next__eps__poster\"></img>\n                  }\n              }()\n            }\n          </div>\n          <div className=\"about--episodes--next--title\">\n            <h4> {data.data.next_episode_to_air.name} </h4>\n          </div>\n          <div className=\"about--episodes--next--number\">\n            <p>episode number: {data.data.next_episode_to_air.episode_number} </p>\n          </div>\n          <div className=\"about--episodes--next--episode\">\n            <p>release number: {data.data.next_episode_to_air.air_date} </p>\n          </div>\n        </div>\n      )\n    }\n  }\n\n  function tvSeasons() {\n    const newState = {...data};\n    newState.showSeasons = true;\n\n    setData(newState)\n  }\n\n  return(\n    <React.Fragment>\n      {\n        function () {\n          if (data.data.length === 0) return <Loader/>;\n\n          if (data.data.length !== 0) {\n            if (data.showSeasons === true) {\n              return(\n                <React.Fragment>\n                  <SeasonEpStyled>\n                  <span onClick={tvSeasons}>\n                    Seasons&Episodes\n                  </span>\n                     {\n                       function () {\n                         if (data.showSeasons === true) {\n                           return data.seasons.map((season, index) => {\n                             return <Seasons data={season} tv={data.data} seasons={season} key={index} />\n                           })\n                         }\n                       }()\n                     }\n                  </SeasonEpStyled>\n                </React.Fragment>\n              )\n            } else {\n              return(\n                <React.Fragment>\n\n                <SeasonEpStyled>\n                  <span onClick={tvSeasons}>\n                     Seasons&Episodes\n                   </span>\n                  </SeasonEpStyled>\n                <AboutTvStyled className=\"tv--about\">\n                   <div className=\"go--back\">\n                     <i className=\"fas fa-home\" onClick={goBack}></i>\n                   </div>\n                   <div className=\"tv--about--header\">\n                     <div className=\"tv--about--backdrop\">\n                       <img src={`https://image.tmdb.org/t/p/w500/${data.data.backdrop_path}`} alt=\"backdrop\"></img>\n                     </div>\n                     <div className=\"tv--about--meta\">\n                       <div className=\"tv--about--title\">\n                         <h1>{data.data.original_name}</h1>\n                       </div>\n                       <div className=\"tv--about--infos\">\n                         <div className=\"tv--about--infos--vote\">\n                           {voteAverage()}\n                         </div>\n\n                         <div className=\"tv--about--infos--genres\">\n                           <p>Genres:</p>\n                           {tvGenres()}\n                         </div>\n                         <div className=\"tv--about--infos--runtime\">\n                           <p>Episode run time: {data.data.episode_run_time[0]}min</p>\n                         </div>\n                         <div className=\"tv--about--infos--date\">\n                           {releaseYear()}\n                         </div>\n                         <button className=\"btn btn-primary\">\n                           <a href={`https://www.youtube.com/results?search_query=${data.data.original_name}`} rel=\"noopener noreferrer\" target=\"_blank\" >\n                             Watch BA\n                           </a>\n                        </button>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"tv--about--description\">\n                    <h2>SYNOPSIS</h2>\n                    <p>{data.data.overview}</p>\n                  </div>\n                  <div className=\"tv--season mb-5\">\n                    <div className=\"tv--season--number\">\n                      <p> {data.data.number_of_seasons} </p>\n                      <p>seasons</p>\n                    </div>\n                    <span className=\"separator\"></span>\n                    <div className=\"tv--season--number\">\n                      <p> {data.data.number_of_episodes}</p>\n                      <p>episodes</p>\n                    </div>\n                  </div>\n                  <div className=\"episodes col-lg-12 mt-5\">\n                    <div className=\"row\">\n                      <div className=\"about--episodes col-lg-6\">\n                        <div className=\"about--episodes--last\">\n                          <h3>Last episode:</h3>\n                          <div className=\"about--episodes--last--img mb-4\">\n                            {lastEpImg()}\n                          </div>\n                          <div className=\"about--episodes--last--title\">\n                            <h4> {data.data.last_episode_to_air.name} </h4>\n                          </div>\n                          <div className=\"about--episodes--last--number\">\n                            <p>episode number: {data.data.last_episode_to_air.episode_number} </p>\n                          </div>\n                          <div className=\"about--episodes--last--episode\">\n                            <p>release number: {data.data.last_episode_to_air.air_date} </p>\n                          </div>\n                        </div>\n                      </div>\n\n                      <div className=\"about--episodes col-lg-6\">\n                        {nextEp()}\n                      </div>\n                    </div>\n                  </div>\n                </AboutTvStyled>\n                </React.Fragment>\n              )\n            }\n          }\n        }()\n      }\n    </React.Fragment>\n  )\n}\n\nexport default AboutTv","import React from \"react\";\nimport MoviesStyled from \"../Feed/MoviesHome/MoviesStyled.style\";\nimport { Link } from \"react-router-dom\";\n\nfunction Tv(props) {\n  return (\n    <React.Fragment>\n      <MoviesStyled className=\"movie mr-5\">\n        <Link to={`/aboutTv/${props.movie.id}`}>\n          <div className=\"movie--body mr-5\">\n            <div className=\"movie--img\">\n              <img src={`https://image.tmdb.org/t/p/w500/${props.movie.poster_path}`} alt=\"poster\" />\n            </div>\n            <div className=\"movie--title\">\n              {\n                function () {\n                  if (props.movie.media_type === \"tv\") {\n                    return(\n                      <h2>{props.movie.original_name} ({props.movie.media_type})</h2>\n                    )\n                    } else {\n                    return <h2>{props.movie.original_name}</h2>\n                  }\n                }()\n              }\n            </div>\n          </div>\n        </Link>\n      </MoviesStyled>\n    </React.Fragment>\n  )\n}\n\nexport default Tv","import React, { useState, useEffect } from \"react\";\nimport Movie from \"../../../Movie/Movie\";\nimport Tv from \"../../../Tv/Tv\";\nimport Loader from \"../../../Loader/Loader\";\n\nfunction TrendingMovies() {\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    fetch(`https://api.themoviedb.org/3/trending/all/week?api_key=${process.env.REACT_APP_API_KEY_MOVIES}`)\n      .then(response => response.json())\n      .then(dataParsed => setData([...dataParsed.results]))\n  }, []);\n\n  return (\n    <React.Fragment>\n      <div className=\"col-md-12\">\n        <h1 className=\" mt-3 mb-5\">Trending Movies & Tv (by week):</h1>\n        {\n          function () {\n            if (data.length === 0) return <Loader/>;\n\n            if (data.length !== 0) {\n              return data.map((movie, index) => {\n                if (movie.media_type === \"movie\") {\n                  return <Movie movie={movie} key={index} />\n                } else if (movie.media_type === \"tv\") {\n                  return <Tv movie={movie} key={index} />\n                }\n              })\n            }\n          }()\n        }\n      </div>\n    </React.Fragment>\n  )\n}\n\nexport default TrendingMovies","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport MoviesStyled from \"../../../../Feed/MoviesHome/MoviesStyled.style\"\nimport Slider from \"../../../../Slider/Slider\";\nimport Loader from \"../../../../Loader/Loader\";\n\nfunction TrendingMovies() {\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    fetch(`https://api.themoviedb.org/3/tv/top_rated?api_key=${process.env.REACT_APP_API_KEY_MOVIES}`)\n      .then(response => response.json())\n      .then(dataParsed => setData([...dataParsed.results]))\n  }, []);\n\n  return (\n    <React.Fragment>\n      {\n        function () {\n          if (data.length === 0) return <Loader/>;\n\n          if (data.length !== 0) {\n            return (\n              <React.Fragment>\n                <h1>Top rated Tv</h1>\n                <MoviesStyled className=\"movie mr-5\">\n                  <Slider>\n                    {\n                      function () {\n                        return data.map((tv, index) => {\n                          return (\n                            <div className=\"movie--body mr-5\" key={index}>\n                              <Link to={`/aboutTv/${tv.id}`}>\n                                <div className=\"movie--img\">\n                                  <img src={`https://image.tmdb.org/t/p/w500/${tv.poster_path}`} alt=\"poster\" />\n                                </div>\n                                <div className=\"movie--title\">\n                                  <h2>{tv.name}</h2>\n                                </div>\n                              </Link>\n                            </div>\n                          )\n                        })\n                      }()\n                    }\n                  </Slider>\n                </MoviesStyled>\n              </React.Fragment>\n            )\n          }\n        }()\n      }\n    </React.Fragment>\n  )\n}\n\nexport default TrendingMovies","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport MoviesStyled from \"../../../../Feed/MoviesHome/MoviesStyled.style\"\nimport Slider from \"../../../../Slider/Slider\";\nimport Loader from \"../../../../Loader/Loader\";\n\nfunction TrendingMovies() {\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    fetch(`https://api.themoviedb.org/3/movie/popular?api_key=${process.env.REACT_APP_API_KEY_MOVIES}`)\n      .then(response => response.json())\n      .then(dataParsed => setData([...dataParsed.results]))\n  }, []);\n\n  return (\n    <React.Fragment>\n      {\n        function () {\n          if (data.length === 0) return <Loader/>;\n\n          if (data.length !== 0) {\n            return (\n              <React.Fragment>\n                <h1>Popular Movies</h1>\n                <MoviesStyled className=\"movie mr-5\">\n                  <Slider>\n                    {\n                      function () {\n                        return data.map((movie, index) => {\n                          return (\n                            <div className=\"movie--body mr-5\" key={index}>\n                              <Link to={`/aboutMovie/${movie.id}`}>\n                                <div className=\"movie--img\">\n                                  <img src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`} alt=\"poster\" />\n                                </div>\n                                <div className=\"movie--title\">\n                                  <h2>{movie.title}</h2>\n                                </div>\n                              </Link>\n                            </div>\n                          )\n                        })\n                      }()\n                    }\n                  </Slider>\n                </MoviesStyled>\n              </React.Fragment>\n            )\n          }\n        }()\n      }\n    </React.Fragment>\n  )\n}\n\nexport default TrendingMovies","import React from \"react\";\nimport TvTopRated from \"./Tv/TvTopRated\";\nimport PopularMovie from \"./Movie/PopularMovie\";\n\nfunction TrendingMovies() {\n  return(\n    <React.Fragment>\n      <TvTopRated />\n      <PopularMovie />\n    </React.Fragment>\n  )\n}\n\nexport default TrendingMovies","import React, { useState, useEffect } from \"react\";\nimport Pagination from \"rc-pagination\";\nimport Loader from \"../../../Loader/Loader\";\nimport { Link } from \"react-router-dom\";\nimport MoviesStyled from \"../../../Feed/MoviesHome/MoviesStyled.style\";\n\nfunction TvList() {\n  const [data, setData] = useState({\n    TvResults: [],\n    currentPage: 1,\n    totalResults: 0,\n    totalPages: 0\n  });\n\n  function getTvResults(page) {\n    fetch(`https://api.themoviedb.org/3/discover/tv?api_key=${process.env.REACT_APP_API_KEY_MOVIES}&language=en-US&sort_by=popularity.desc&page=${page}&timezone=America%2FNew_York&include_null_first_air_dates=false`)\n      .then(response => response.json())\n      .then(dataParsed => setData({\n        TvResults: dataParsed.results,\n        currentPage: dataParsed.page,\n        totalResults: dataParsed.total_results,\n        totalPages: dataParsed.total_pages,\n      })\n      )\n  }\n\n  useEffect(() => {\n    getTvResults(data.currentPage)\n  }, []);\n\n  function handleOnChangePage(page) {\n    getTvResults(page);\n  }\n\n  return (\n    <React.Fragment>\n      <h1>Tv Results:</h1>\n      <Pagination\n        onChange={handleOnChangePage}\n        current={data.currentPage}\n        total={data.totalResults}\n        pageSize={data.totalPages}\n        className=\"mb-5 mt-3\"\n      />\n      {\n        function () {\n          if (data.TvResults.length === 0) return <Loader />\n\n          if (data.TvResults.length !== 0) {\n            return data.TvResults.map((tv, index) => {\n              return (\n                  <MoviesStyled className=\"mr-5\" key={index}>\n                    <div className=\"movie--body mr-5\" key={index}>\n                      <Link to={`/aboutTv/${tv.id}`}>\n                        <div className=\"movie--img\">\n                          <img src={`https://image.tmdb.org/t/p/w500/${tv.poster_path}`} alt=\"poster\" />\n                        </div>\n                        <div className=\"movie--title\">\n                          <h2>{tv.name}</h2>\n                        </div>\n                      </Link>\n                    </div>\n                  </MoviesStyled>\n              )\n            })\n          }\n        }()\n      }\n    </React.Fragment>\n  )\n}\n\nexport default TvList","import styled from \"styled-components\";\n\nconst FiltersStyled = styled.div`\n  padding-left: 20px;\n  :hover {\n    border-left: 1px solid #0CD0FC;\n  }\n  a {\n    h3 {\n    font-weight: bold;\n      :hover {\n        color: #0CD0FC;\n      }\n    }\n    :hover {\n      text-decoration: none;\n    }\n  }\n`\n\nexport default FiltersStyled","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport FiltersStyled from \"../FiltersStyle/FiltersStyled.style\";\n\nfunction Trending() {\n  return(\n    <FiltersStyled>\n      <Link to={`/trending`}>\n        <h3>Trending</h3>\n      </Link>\n    </FiltersStyled>\n  )\n}\n\nexport default Trending","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport FiltersStyled from \"../FiltersStyle/FiltersStyled.style\";\n\nfunction TvMovies() {\n  return(\n    <FiltersStyled>\n      <Link to={`/tv&movies`}>\n        <h3>Tv & Movies</h3>\n      </Link>\n    </FiltersStyled>\n  )\n}\n\nexport default TvMovies","import styled from \"styled-components\";\n\nconst CategoriesStyled = styled.div`\n  padding-left: 20px;\n  margin-top: 2%;\n  margin-bottom: 10%;\n  :hover {\n    border-left: 1px solid #0CD0FC;\n  }\n  a {\n    text-decoration: none;\n  }\n  h3 {\n    font-weight: bold;\n      :hover {\n        color: #0CD0FC;\n      }\n    }\n    :hover {\n      text-decoration: none;\n    }\n  li {\n    color: white;\n    list-style-type: none;\n  }\n\n`\n\nexport default CategoriesStyled","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport CategoriesStyled from \"./CategoriesStyled.style\";\n\nfunction Categories() {\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    fetch(`https://api.themoviedb.org/3/genre/movie/list?api_key=${process.env.REACT_APP_API_KEY_MOVIES}`)\n      .then(response => response.json())\n      .then(dataParsed => setData([...dataParsed.genres]))\n  }, [])\n\n  return (\n    <CategoriesStyled className=\"categories\">\n      <h3>Categories</h3>\n      <div className=\"categories--names\">\n        {\n          function () {\n            if (data.length === 0) return \"loading\";\n\n            if (data.length !== 0) {\n              return data.map((genre, index) => {\n                return (\n                  <Link to={`/byCategory/${genre.id}`} key={genre.id}>\n                    <li key={genre.id} className={genre.id}>{genre.name}</li>\n                  </Link>\n                )\n              })\n            }\n          }()\n        }\n      </div>\n    </CategoriesStyled>\n  )\n}\n\nexport default Categories","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport FiltersStyled from \"../FiltersStyle/FiltersStyled.style\";\n\nfunction Tv() {\n  return(\n    <FiltersStyled>\n      <Link to={`/tvList`}>\n      <h3>Tv</h3>\n      </Link>\n    </FiltersStyled>\n  )\n}\n\nexport default Tv","import React from \"react\";\nimport Trending from \"../LeftSection/Filters/Trending/Trending\";\nimport TvMovies from \"../LeftSection/Filters/TvMovies/TvMovies\";\nimport Categories from \"../LeftSection/Filters/Categories/Categories\";\nimport Tv from \"../LeftSection/Filters/Tv/Tv\";\n\nfunction Filters() {\n  return(\n    <React.Fragment>\n      <Trending />\n      <TvMovies />\n      <Tv />\n      <Categories />\n    </React.Fragment>\n  )\n}\n\nexport default Filters","import React, { useState, useEffect } from \"react\";\nimport Movie from \"../components/Movie/Movie\";\nimport Pagination from 'rc-pagination';\nimport 'rc-pagination/assets/index.css';\nimport Loader from \"../components/Loader/Loader\";\n\nfunction Results(props) {\n  const [data, setData] = useState({\n    results: [],\n    currentPage: 1,\n    totalResults: 0,\n    totalPages: 0\n  });\n\n  function getResults(page) {\n    // fetch(\"https://api.themoviedb.org/3/movie/popular?api_key=${process.env.REACT_APP_API_KEY_MOVIES}&append_to_response=recommendations,top_rated&page=2\")\n    fetch(`https://api.themoviedb.org/3/discover/movie?api_key=${process.env.REACT_APP_API_KEY_MOVIES}&with_genres=${props.match.params.id}&page=${page}`)\n      .then(response => response.json())\n      .then(dataParsed => setData({\n        results: dataParsed.results,\n        currentPage: dataParsed.page,\n        totalResults: dataParsed.total_results,\n        totalPages: dataParsed.total_pages,\n      })\n      )\n  }\n\n  useEffect(() => {\n    getResults(data.currentPage);\n  }, [props.match.params.id])\n\n  function handleOnChangePage(page) {\n    getResults(page);\n  }\n\n  return (\n    <React.Fragment>\n      <h1>Results</h1>\n      <Pagination\n        onChange={handleOnChangePage}\n        current={data.currentPage}\n        total={data.totalResults}\n        pageSize={data.totalPages}\n        className=\"mb-5\"\n      />\n      {\n        function () {\n          if (data.results.length === 0) return <Loader/>;\n\n          if (data.results.length !== 0) {\n            data.results.sort(function (a,b) {\n              if (a.original_title < b.original_title) return -1;\n              if (a.original_title > b.original_title) return 1;\n              return 0;\n            });\n\n            return data.results.map((result, index) => {\n              return <Movie movie={result} key={index} />\n            })\n          }\n        }()\n      }\n    </React.Fragment>\n  )\n\n}\n\nexport default Results","import styled from \"styled-components\";\n\nconst SearchBarStyled = styled.div`\nmargin-bottom: 8%;\n  input {\n    color: white;\n    background-color: #232D32;\n    border: none;\n  }\n  i {\n    margin-left: 10px;\n    color: white;\n      :hover {\n        cursor: pointer;\n      }\n  }\n`\n\nexport default SearchBarStyled","import React, { useState } from \"react\";\nimport SearchBarStyled from \"./SearchBarStyled.style\";\nimport { Link } from \"react-router-dom\";\n\nfunction SearchBar() {\n  const [data, setData] = useState({\n    results: [],\n    searchInput: \"\"\n  })\n\n  function searchResults(el) {\n    const newState = { ...data }\n    newState.searchInput = el.target.value;\n    setData(newState);\n  }\n\n  return (\n    <React.Fragment>\n      <SearchBarStyled className=\"search--input\">\n        <input type=\"search\" placeholder=\"Search\" onChange={e => searchResults(e)} />\n        <Link to={`/searchResults?${data.searchInput}`} >\n          <i className=\"fas fa-search\"></i>\n        </Link>\n      </SearchBarStyled>\n    </React.Fragment>\n  )\n\n}\n\nexport default SearchBar","import React, { useState, useEffect } from \"react\";\nimport Loader from \"../Loader/Loader\";\nimport Movie from \"../Movie/Movie\";\nimport Pagination from \"rc-pagination\";\n\nfunction SearchResults(props) {\n  const [data, setData] = useState({\n    searchResults: [],\n    currentPage: 1,\n    totalResults: 0,\n    totalPages: 0\n  });\n\n  function getSearchResults(page) {\n    fetch(`https://api.themoviedb.org/3/search/movie?api_key=${process.env.REACT_APP_API_KEY_MOVIES}&language=en-US&query=${props.location.search}&page=${page}&include_adult=false`)\n      .then(response => response.json())\n      .then(dataParsed => setData({\n        searchResults: dataParsed.results,\n        currentPage: dataParsed.page,\n        totalResults: dataParsed.total_results,\n        totalPages: dataParsed.total_pages,\n      })\n      )\n  }\n\n  useEffect(() => {\n    getSearchResults(data.currentPage)\n  }, [props.location.search]);\n\n  function handleOnChangePage(page) {\n    getSearchResults(page);\n  }\n\n  return (\n    <React.Fragment>\n      <h1>Search Results:</h1>\n      <Pagination\n        onChange={handleOnChangePage}\n        current={data.currentPage}\n        total={data.totalResults}\n        pageSize={data.totalPages}\n        className=\"mb-5 mt-3\"\n      />\n      {\n        function () {\n          if (data.searchResults.length === 0) return <Loader />\n\n          if (data.searchResults.length !== 0) {\n            return data.searchResults.map((resultMovie, index) => {\n              return <Movie movie={resultMovie} key={index} />\n            })\n          }\n        }()\n      }\n\n    </React.Fragment>\n  )\n}\n\nexport default SearchResults","import styled from \"styled-components\";\n\nconst AboutSeasonStyled = styled.div`\n  color: white;\n  .season--title {\n    margin-bottom: 6%;\n      h1 {\n        text-align: center;\n        font-size: 2.4em;\n      }\n    }\n    .season--poster {\n      img {\n        width: 13vw;\n      }\n    }\n    .about--people {\n      .about--people--img {\n        img {\n          width: 8vw;\n        }\n      }\n    }\n`\n\nexport default AboutSeasonStyled","import React, { useState, useEffect } from \"react\";\nimport AboutSeasonStyled from \"./AboutSeasonStyled.style\";\nimport Loader from \"../../../../Loader/Loader\";\nimport ReactPlayer from \"react-player\";\nimport SeasonsStyled from \"../SeasonsStyled.style\";\n\nfunction AboutSeason(props) {\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    fetch(`https://api.themoviedb.org/3/tv/${props.match.params.id}/season/${props.match.params.season_number}?api_key=${process.env.REACT_APP_API_KEY_MOVIES}&language=en-US&append_to_response=credits,videos`)\n      .then(response => response.json())\n      .then(dataParsed => setData({ ...dataParsed }))\n  }, [props.match.params.id])\n\n  console.log(data);\n\n  function convertDate() {\n    const date = new Date(data.air_date);\n    const day = date.getDay();\n    const month = date.getMonth() + 1;\n    const year = date.getFullYear();\n\n    return `${day}/${month}/${year}`;\n  }\n\n  function seasonNumber(sn) {\n    if (sn.season_number > 9) {\n      return (\n        `S${sn.season_number}`\n      )\n    } else {\n      return `S0${sn.season_number}`;\n    }\n  }\n\n  function episodeNumber(epn) {\n    if (epn.episode_number > 9) {\n      return (\n        `E${epn.episode_number}`\n      )\n    } else {\n      return `E0${epn.episode_number}`;\n    }\n  }\n\n  return (\n    <React.Fragment>\n\n      {\n        function () {\n          if (data.length === 0) return <Loader />\n\n          if (data.length !== 0) {\n            return (\n              <AboutSeasonStyled>\n                <div className=\"season--title\">\n                  <h1>{data.name}</h1>\n                </div>\n                <div className=\"season--about col-lg-12\">\n                  <div className=\"row\">\n                    <div className=\"season--poster col-lg-3\">\n                      <img src={`https://image.tmdb.org/t/p/w500/${data.poster_path}`} alt=\"poster\"></img>\n                    </div>\n                    <div className=\"season--overview col-lg-4\">\n                      <h3>Synopsis</h3>\n                      <p> {data.overview}  </p>\n                    </div>\n                    <div className=\"season--infos col-lg-5\">\n                      <h3>Infos Season</h3>\n                      <p>{data.episodes.length} episodes  </p>\n                      <p>Season released in {convertDate()}  </p>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"season--casting mt-5\">\n                  <div className=\"season--casting--title\">\n                    <h1 className=\"mb-4\">Casting</h1>\n                  </div>\n                  <div className=\"season--cast\">\n                    <div className=\"row\">\n                      {\n                        data.credits.cast.map((people, index) => {\n                          return (\n                            <div className=\"about--people col-lg-3\" key={index}>\n                              <div className=\"about--people--img\">\n                                <img src={`https://image.tmdb.org/t/p/w500/${people.profile_path}`} alt=\"poster\"></img>\n                              </div>\n                              <div className=\"about--people--name\">\n                                <p> {people.name} </p>\n                              </div>\n                              <div className=\"about--people--character\">\n                                <p><em>Character: {people.character}</em></p>\n                              </div>\n                            </div>\n                          )\n                        })\n                      }\n                    </div>\n                  </div>\n                </div>\n                <div className=\"season--videos mt-5\">\n                  <div className=\"season--videos--title\">\n                    <h1>Video(s) of the Season {data.season_number}</h1>\n                  </div>\n                  <div className=\"season--videos\">\n                    {\n                      function () {\n                        if (data.videos.results) {\n                          return data.videos.results.map((video, index) => {\n                            return (\n                              <ReactPlayer\n                                url={`https://www.youtube.com/watch?v=${video.key}`}\n                                width={\"60%\"}\n                                controls\n                                key={index}\n                              />\n                            )\n                          })\n                        }\n                      }()\n                    }\n                  </div>\n                </div>\n                <div className=\"season--list--episode\">\n                  <h1 className=\"mt-5\">Episodes of the season {data.season_number}</h1>\n                  {\n                    function () {\n                      return data.episodes.map((episode, index) => {\n                        return (\n                          <SeasonsStyled>\n                            <div className=\"season episode mt-3\" key={index}>\n                              <div className=\"episode--poster\">\n                                <img src={`https://image.tmdb.org/t/p/w500/${episode.still_path}`} alt=\"poster\"></img>\n                              </div>\n                              <div className=\"episode--about ml-3\">\n                                <div className=\"episode--about--info\">\n                                  <p>{seasonNumber(episode)}{episodeNumber(episode)} - {episode.name} </p>\n                                  <p> {convertDate()} </p>\n                                </div>\n                                <div className=\"episode--about--overview\">\n                                  <p>{episode.overview}</p>\n                                </div>\n                              </div>\n                            </div>\n                          </SeasonsStyled>\n                        )\n                      })\n                    }()\n                  }\n                </div>\n              </AboutSeasonStyled>\n            )\n          }\n        }()\n      }\n    </React.Fragment>\n  )\n}\n\nexport default AboutSeason","import React from 'react';\nimport { Route, BrowserRouter } from \"react-router-dom\";\nimport '../App.css'\nimport Title from '../components/Header/Title';\nimport Feed from '../container/Feed';\nimport AboutMovie from \"../components/Movie/AboutMovie\";\nimport AboutTv from \"../components/Tv/AboutTv\";\nimport TrendingMovies from \"../components/LeftSection/Filters/Trending/TrendingMovies\";\nimport TvMovies from \"../components/LeftSection/Filters/TvMovies/FeedTvMovies\";\nimport TvList from \"../components/LeftSection/Filters/Tv/TvList\";\nimport Filters from '../components/Filters/Filters';\nimport Results from '../container/Results';\nimport SearchBar from '../container/SearchBar/SearchBar';\nimport SearchResults from '../components/SearchResults/SearchResults';\nimport AboutSeason from \"../components/Tv/SeasonsEp/Seasons/AboutSeason/AboutSeason\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"container App col-12\">\n        <main>\n          <div className=\"row\">\n            <section className=\"left-section col-lg-2\">\n              <Title />\n              <SearchBar />\n              <div className=\"filters\">\n                <Filters />\n              </div>\n            </section>\n            <section className=\"right-section col-lg-9 col-md-7\">\n              <Route exact path=\"/\" component={Feed} />\n              <Route exact path=\"/aboutMovie/:id\" component={AboutMovie} ></Route>\n              <Route exact path=\"/aboutTv/:id\" component={AboutTv} ></Route>\n              <Route exact path=\"/trending\" component={TrendingMovies} ></Route>\n              <Route exact path=\"/tv&movies\" component={TvMovies} ></Route>\n              <Route exact path=\"/tvList\" component={TvList} ></Route>\n              <Route exact path=\"/byCategory/:id\" component={Results} ></Route>\n              <Route exact path=\"/searchResults\" component={SearchResults} ></Route>\n              <Route exact path=\"/aboutSeason/:id/season/:season_number\" component={AboutSeason} ></Route>\n            </section>\n          </div>\n        </main>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from \"./App/App\"\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}